// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/evaluator.proto

package serving

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EvaluationRequest struct {
	ModelUid string                     `protobuf:"bytes,1,opt,name=model_uid,json=modelUid" json:"model_uid,omitempty"`
	Features map[string]*ValueInterface `protobuf:"bytes,2,rep,name=features" json:"features,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *EvaluationRequest) Reset()                    { *m = EvaluationRequest{} }
func (m *EvaluationRequest) String() string            { return proto.CompactTextString(m) }
func (*EvaluationRequest) ProtoMessage()               {}
func (*EvaluationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *EvaluationRequest) GetModelUid() string {
	if m != nil {
		return m.ModelUid
	}
	return ""
}

func (m *EvaluationRequest) GetFeatures() map[string]*ValueInterface {
	if m != nil {
		return m.Features
	}
	return nil
}

type EvaluationResponse struct {
	ModelUid   string                     `protobuf:"bytes,1,opt,name=model_uid,json=modelUid" json:"model_uid,omitempty"`
	VersionUid string                     `protobuf:"bytes,2,opt,name=version_uid,json=versionUid" json:"version_uid,omitempty"`
	Node       string                     `protobuf:"bytes,3,opt,name=node" json:"node,omitempty"`
	Result     map[string]*ValueInterface `protobuf:"bytes,4,rep,name=result" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *EvaluationResponse) Reset()                    { *m = EvaluationResponse{} }
func (m *EvaluationResponse) String() string            { return proto.CompactTextString(m) }
func (*EvaluationResponse) ProtoMessage()               {}
func (*EvaluationResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *EvaluationResponse) GetModelUid() string {
	if m != nil {
		return m.ModelUid
	}
	return ""
}

func (m *EvaluationResponse) GetVersionUid() string {
	if m != nil {
		return m.VersionUid
	}
	return ""
}

func (m *EvaluationResponse) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *EvaluationResponse) GetResult() map[string]*ValueInterface {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*EvaluationRequest)(nil), "serving.EvaluationRequest")
	proto.RegisterType((*EvaluationResponse)(nil), "serving.EvaluationResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for EvaluatorService service

type EvaluatorServiceClient interface {
	Evaluate(ctx context.Context, in *EvaluationRequest, opts ...grpc.CallOption) (*EvaluationResponse, error)
}

type evaluatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewEvaluatorServiceClient(cc *grpc.ClientConn) EvaluatorServiceClient {
	return &evaluatorServiceClient{cc}
}

func (c *evaluatorServiceClient) Evaluate(ctx context.Context, in *EvaluationRequest, opts ...grpc.CallOption) (*EvaluationResponse, error) {
	out := new(EvaluationResponse)
	err := grpc.Invoke(ctx, "/serving.EvaluatorService/Evaluate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for EvaluatorService service

type EvaluatorServiceServer interface {
	Evaluate(context.Context, *EvaluationRequest) (*EvaluationResponse, error)
}

func RegisterEvaluatorServiceServer(s *grpc.Server, srv EvaluatorServiceServer) {
	s.RegisterService(&_EvaluatorService_serviceDesc, srv)
}

func _EvaluatorService_Evaluate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EvaluationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EvaluatorServiceServer).Evaluate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/serving.EvaluatorService/Evaluate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EvaluatorServiceServer).Evaluate(ctx, req.(*EvaluationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EvaluatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "serving.EvaluatorService",
	HandlerType: (*EvaluatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Evaluate",
			Handler:    _EvaluatorService_Evaluate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/evaluator.proto",
}

func init() { proto.RegisterFile("protos/evaluator.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 307 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0xe5, 0xa4, 0x94, 0xf4, 0x22, 0xa4, 0xd6, 0x03, 0x44, 0xe9, 0x40, 0xd4, 0x85, 0x2c,
	0x04, 0x29, 0x2c, 0x88, 0x85, 0x01, 0x82, 0xc4, 0x6a, 0xfe, 0x8d, 0x28, 0x24, 0x57, 0x14, 0x11,
	0xec, 0x62, 0x3b, 0x91, 0xfa, 0x1d, 0xf9, 0x46, 0x2c, 0x28, 0x8e, 0xa9, 0x8a, 0x80, 0x4e, 0xdd,
	0xac, 0xf7, 0x7e, 0x77, 0x2f, 0x77, 0x17, 0xd8, 0x5f, 0x48, 0xa1, 0x85, 0x3a, 0xc1, 0x36, 0xaf,
	0x9b, 0x5c, 0x0b, 0x99, 0x18, 0x81, 0xee, 0x2a, 0x94, 0x6d, 0xc5, 0x5f, 0xc2, 0x89, 0x05, 0x0a,
	0x21, 0xb1, 0xf7, 0x66, 0x1f, 0x04, 0x26, 0x59, 0xcf, 0x57, 0x82, 0x33, 0x7c, 0x6f, 0x50, 0x69,
	0x3a, 0x85, 0xd1, 0x9b, 0x28, 0xb1, 0x7e, 0x6a, 0xaa, 0x32, 0x20, 0x11, 0x89, 0x47, 0xcc, 0x33,
	0xc2, 0x7d, 0x55, 0xd2, 0x2b, 0xf0, 0xe6, 0x98, 0xeb, 0x46, 0xa2, 0x0a, 0x9c, 0xc8, 0x8d, 0xfd,
	0x34, 0x4e, 0x6c, 0x42, 0xf2, 0xab, 0x55, 0x72, 0x6d, 0xd1, 0x8c, 0x6b, 0xb9, 0x64, 0xab, 0xca,
	0xf0, 0x0e, 0xf6, 0x7e, 0x58, 0x74, 0x0c, 0xee, 0x2b, 0x2e, 0x6d, 0x5a, 0xf7, 0xa4, 0xc7, 0xb0,
	0xd3, 0xb5, 0xc3, 0xc0, 0x89, 0x48, 0xec, 0xa7, 0x07, 0xab, 0x94, 0x87, 0x4e, 0xbd, 0xe1, 0x1a,
	0xe5, 0x3c, 0x2f, 0x90, 0xf5, 0xd4, 0xb9, 0x73, 0x46, 0x66, 0x9f, 0x04, 0xe8, 0xfa, 0x37, 0xa8,
	0x85, 0xe0, 0x0a, 0x37, 0xcf, 0x73, 0x08, 0x7e, 0x8b, 0x52, 0x55, 0x82, 0x1b, 0xdb, 0x31, 0x36,
	0x58, 0xa9, 0x03, 0x28, 0x0c, 0xb8, 0x28, 0x31, 0x70, 0x8d, 0x63, 0xde, 0xf4, 0x02, 0x86, 0x12,
	0x55, 0x53, 0xeb, 0x60, 0x60, 0x56, 0x70, 0xf4, 0xe7, 0x0a, 0xfa, 0xf8, 0x84, 0x19, 0xb2, 0xdf,
	0x80, 0x2d, 0x0b, 0x19, 0xf8, 0x6b, 0xf2, 0x56, 0xa6, 0x4f, 0x1f, 0x61, 0x9c, 0x7d, 0xdf, 0xfe,
	0xb6, 0xa3, 0x0b, 0xa4, 0x97, 0xe0, 0x59, 0x0d, 0x69, 0xf8, 0xff, 0x9d, 0xc2, 0xe9, 0x86, 0x01,
	0x9e, 0x87, 0xe6, 0x67, 0x39, 0xfd, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x51, 0xb3, 0x66, 0xba, 0x62,
	0x02, 0x00, 0x00,
}
